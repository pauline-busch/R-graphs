source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/Barplot.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
source("~/GitHub/R-graphs/Scripts/barplot_ionstatus.R")
library(ggplot2)
library(ggpubr)
library(openxlsx)
library(data.table)
library(ggstatsplot)
Data <- data.table(
read.xlsx("TC_results.xlsx")
)
Data_summary <- Data %>%
group_by(type, sample) %>%
summarise_all(c("mean", "sd"))
library(ggplot2)
library(ggpubr)
library(openxlsx)
library(data.table)
library(ggstatsplot)
library(dplyr)
library(car)
Data <- data.table(
read.xlsx("TC_results.xlsx")
)
setwd("~/GitHub/R-graphs/data_tables")
Data <- data.table(
read.xlsx("TC_results.xlsx")
)
Data_summary <- Data %>%
group_by(type, sample) %>%
summarise_all(c("mean", "sd"))
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = sample)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_continuous(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
)
source("~/GitHub/R-graphs/Scripts/TC_results.R")
Data <- data.table(
read.xlsx("TC_results.xlsx")
)
Data_summary <- Data %>%
group_by(type, sample) %>%
summarise_all(c("mean", "sd"))
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_continuous(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
)
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_distiller(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
)
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_discrete(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
)
install.packages("ggsci")
library(ggsci)
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_aaas(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
)
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_bmj(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
)
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_cosmic(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
)
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_cosmic(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
) +
theme_pubclean()
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_cosmic(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
) +
theme_pubr()
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_cosmic(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
) +
labs(
x = "",
y = "CH [pg]"
) +
theme_pubr()
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_cosmic(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
) +
labs(
x = "",
y = "CH [pg]"
) +
theme_pubr(
legend = "none"
)
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_cosmic(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
) +
labs(
title = "Cell hemoglobin"
x = "",
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_cosmic(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
) +
labs(
title = "Cell hemoglobin",
x = "",
y = "CH [pg]"
) +
theme_pubr(
legend = "none"
)
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_cosmic(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
) +
labs(
title = "Cell hemoglobin",
x = "",
y = "CH [pg]"
) +
theme_pubr(
legend = "none",
plot.title = element_text(hjust = 0.5, size = 20, face = "bold")
)
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_cosmic(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
) +
labs(
title = "Cell hemoglobin"
x = "",
ggplot(
data = Data_summary,
aes(
x = type,
y = `CH.(pg)_mean`,
fill = type)
) +
geom_boxplot(
aes(alpha = 0.7)
) +
scale_fill_cosmic(
) +
geom_point(
) +
geom_line(
group = Data_summary$sample
) +
labs(
title = "Cell hemoglobin",
x = "",
y = "CH [pg]"
) +
theme_pubr(
legend = "none"
) +
theme(
plot.title = element_text(hjust = 0.5, size = 20, face = "bold")
)
source("~/GitHub/R-graphs/Scripts/TC_results.R")
View(Data_summary)
source("~/GitHub/R-graphs/Scripts/TC_results.R")
source("~/GitHub/R-graphs/Scripts/TC_results.R")
source("~/GitHub/R-graphs/Scripts/TC_results.R")
source("~/GitHub/R-graphs/Scripts/TC_results.R")
source("~/GitHub/R-graphs/Scripts/TC_results.R")
source("~/GitHub/R-graphs/Scripts/TC_results.R")
source("~/GitHub/R-graphs/Scripts/TC_results.R")
source("~/GitHub/R-graphs/Scripts/TC_results.R")
source("~/GitHub/R-graphs/Scripts/TC_results.R")
source("~/GitHub/R-graphs/Scripts/TC_results.R")
Data <- data.table(
read.xlsx("TC_analysis2.xlsx"))
grouped_data <- split(Data$Max.RI, Data$type)
View(grouped_data)
library(medicaldata)
streptomycin <- strep_tb
library(ggstatsplot)
library(readxl)
library(openxlsx)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(ggpubr)
View(streptomycin)
library(medicaldata)
theophylline <- theoph
View(theophylline)
library(medicaldata)
blood <- blood_storage
View(blood)
View(Data)
grouped_data <- split(blood$RBC.Age.Group, blood$TimeToRecurrence)
shapiro_results <- lapply(grouped_data, shapiro.test)
View(grouped_data)
grouped_data <- split(blood$RBC.Age.Group)
View(grouped_data)
library(medicaldata)
blood <- blood_storage
grouped_data <- split(blood$RBC.Age.Group)
grouped_data <- split(factor(blood$RBC.Age.Group))
RBC_group <- factor(blood$RBC.Age.Group)
grouped_data <- split(RBC_group)
grouped_data <- split(bl
grouped_data <- split(blood$RBC.Age.Group)
RBC_group <- factor(blood$RBC.Age.Group)
grouped_data <- split(blood$RBC.Age.Group)
blood$RBC.Age.Group <- as.factor(blood$RBC.Age.Group)
grouped_data <- split(blood$RBC.Age.Group)
blood$RBC.Age.Group <- as.factor(blood$RBC.Age.Group)
grouped_data <- split(blood$RBC.Age.Group)
blood$RBC.Age.Group <- as.factor(blood$RBC.Age.Group)
grouped_data <- split(blood$RBC.Age.Group, blood$TimeToRecurrence)
View(grouped_data)
blood$RBC.Age.Group <- as.factor(blood$RBC.Age.Group)
grouped_data <- split(blood$TimeToRecurrence, blood$RBC.Age.Group)
blood$RBC.Age.Group <- as.factor(blood$RBC.Age.Group)
grouped_data <- split(blood$TimeToRecurrence, blood$RBC.Age.Group)
shapiro_results <- lapply(grouped_data, shapiro.test)
View(grouped_data)
View(shapiro_results)
library(medicaldata)
blood <- blood_storage
#blood$RBC.Age.Group <- as.factor(blood$RBC.Age.Group)
grouped_data <- split(blood$TimeToRecurrence, blood$RBC.Age.Group)
shapiro_results <- lapply(grouped_data, shapiro.test)
View(shapiro_results)
View(grouped_data)
View(grouped_data)
View(blood)
View(shapiro_results)
library(medicaldata)
blood <- blood_storage
grouped_data <- split(blood$TimeToRecurrence, blood$RBC.Age.Group)
#shapiro_results <- lapply(grouped_data, shapiro.test)
shapiro_results <- shapiro.test(grouped_data)
grouped_data <- split(blood$TimeToRecurrence, blood$RBC.Age.Group)
#shapiro_results <- lapply(grouped_data, shapiro.test)
shapiro_results <- shapiro.test(grouped_data$1)
grouped_data <- split(blood$TimeToRecurrence, blood$RBC.Age.Group)
#shapiro_results <- lapply(grouped_data, shapiro.test)
shapiro_results <- shapiro.test(grouped_data$1)
View(grouped_data)
grouped_data <- split(blood$TimeToRecurrence, blood$RBC.Age.Group)
#shapiro_results <- lapply(grouped_data, shapiro.test)
shapiro_results <- shapiro.test(grouped_data[1])
grouped_data <- split(blood$TimeToRecurrence, blood$RBC.Age.Group)
#shapiro_results <- lapply(grouped_data, shapiro.test)
shapiro_results <- shapiro.test(grouped_data[1,])
grouped_data <- split(blood$TimeToRecurrence, blood$RBC.Age.Group)
#shapiro_results <- lapply(grouped_data, shapiro.test)
shapiro_results <- shapiro.test(grouped_data[1,1])
View(grouped_data)
grouped_data <- split(blood$TimeToRecurrence, blood$RBC.Age.Group)
#shapiro_results <- lapply(grouped_data, shapiro.test)
shapiro_results <- shapiro.test(grouped_data["1"])
grouped_data <- split(blood$TimeToRecurrence, blood$RBC.Age.Group)
#shapiro_results <- lapply(grouped_data, shapiro.test)
shapiro_results <- shapiro.test(grouped_data[["1"]])
View(shapiro_results)
