install.packages("tidyverse")
library(data.table)
library(ggplot2)
library(dbplyr)
library(dplyr)
library(dyplyr)
library(dplyr)
Data <- data.table(
read.xlsx("TC_analysis.xlsx"))
library(ggplot2)
library(ggpubr)
library(openxlsx)
library(data.table)
library(ggstatsplot)
library(dplyr)
Data <- data.table(
read.xlsx("TC_analysis.xlsx"))
setwd("~/GitHub/R-graphs/data_tables")
library(ggplot2)
library(ggpubr)
library(openxlsx)
library(data.table)
library(ggstatsplot)
library(dplyr)
Data <- data.table(
read.xlsx("TC_analysis.xlsx"))
f.type <- factor(
Data$type, level = c("blank", "CDNB","Diamide", "NEM")
)
shapiro_results <- lapply(Data, shapiro.test)
shapiro_results <- shapiro.test(Data$`cv(fL)`)
View(shapiro_results)
grouped_data <- split(Data$`cv(fL)`, Data$type)
View(grouped_data)
shapiro_results <- lapply(grouped_data, shapiro.test)
View(shapiro_results)
install.packages("car")
library(car)
levene_result <- leveneTest(`cv(fL)` ~ type, data = Data)
View(levene_result)
levene_result <- leveneTest(`cv(fL)` ~ factor(type), data = Data)
View(levene_result)
View(levene_result)
ggbetweenstats(
data = Data,
x = type,
y = `cv(fL)`,
type = "nonparametric",  # Set to nonparametric to use Kruskal-Wallis test
pairwise.comparisons = TRUE,            # Perform post-hoc pairwise comparisons (Dunn's test)
pairwise.display = "significant",    # Show only significant comparisons (or "all")
pairwise.annotation = "p.value",        # Annotate the plot with p-values
title = "Volume"
)
library(ggplot2)
library(ggpubr)
library(openxlsx)
library(data.table)
library(ggstatsplot)
library(dplyr)
library(car)
ggbetweenstats(
data = Data,
x = type,
y = `cv(fL)`,
type = "nonparametric",  # Set to nonparametric to use Kruskal-Wallis test
pairwise.comparisons = TRUE,            # Perform post-hoc pairwise comparisons (Dunn's test)
pairwise.display = "significant",    # Show only significant comparisons (or "all")
pairwise.annotation = "p.value",        # Annotate the plot with p-values
title = "Volume"
)
ggsave("TCstat_volume2.tiff", path = "C:/Users/miri/Documents/GitHub/R-graphs/Graphs and figures", units = "in", dpi=300, compression = 'lzw', width = 12, height = 8)
